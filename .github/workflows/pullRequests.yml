# This file was automatically generated by github-actions-wac.
# DO NOT MODIFY IT BY HAND. Instead, modify the source *.wac.ts file(s)
# and run "github-actions-wac build" (or "ghawac build") to regenerate this file.
# For more information, run "github-actions-wac --help".
name: Pull Requests
'on': pull_request
concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true
jobs:
  validateCommits:
    name: Validate commit messages
    if: github.base_ref != 'dev'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  validateCommitsDev:
    name: Validate commit messages (dev branch, 'feat' commits not allowed)
    if: github.base_ref == 'dev'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0
        with:
          allowed-commit-types: fix,docs,style,refactor,test,build,perf,ci,chore,revert,merge,wip
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  constants:
    name: Create constants
    outputs:
      global-cache-key: ${{ steps.global-cache-key.outputs.global-cache-key }}
      run-cache-key: ${{ steps.run-cache-key.outputs.run-cache-key }}
      is-fork-pr: ${{ steps.is-fork-pr.outputs.is-fork-pr }}
      changed-packages: ${{ steps.detect-changed-packages.outputs.changed-packages }}
      latest-webiny-version: ${{ steps.latest-webiny-version.outputs.latest-webiny-version }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: Create global cache key
        id: global-cache-key
        run: >-
          echo "global-cache-key=${{ github.base_ref }}-${{ runner.os
          }}-$(/bin/date -u "+%m%d")-${{ vars.RANDOM_CACHE_KEY_SUFFIX }}" >>
          $GITHUB_OUTPUT
      - name: Create workflow run cache key
        id: run-cache-key
        run: >-
          echo "run-cache-key=${{ github.run_id }}-${{ github.run_attempt }}-${{
          vars.RANDOM_CACHE_KEY_SUFFIX }}" >> $GITHUB_OUTPUT
      - name: Is a PR from a fork
        id: is-fork-pr
        run: >-
          echo "is-fork-pr=${{ github.event.pull_request.head.repo.fork }}" >>
          $GITHUB_OUTPUT
      - name: Detect changed files
        id: detect-changed-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            changed:
              - 'packages/**/*'
          list-files: json
      - name: Detect changed packages
        id: detect-changed-packages
        run: >-
          echo "changed-packages=$(node
          .github/workflows/wac/utils/runNodeScripts/listChangedPackages.js '${{
          steps.detect-changed-files.outputs.changed_files }}')" >>
          $GITHUB_OUTPUT
      - name: Get latest Webiny version on NPM
        id: latest-webiny-version
        run: >-
          echo "latest-webiny-version=$(npm view @webiny/cli version)" >>
          $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  assignMilestone:
    name: Assign milestone
    needs: constants
    if: >-
      needs.constants.outputs.is-fork-pr != 'true' &&
      github.event.pull_request.milestone == null
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: Print latest Webiny version
        run: echo ${{ needs.constants.outputs.latest-webiny-version }}
      - id: get-milestone-to-assign
        name: Get milestone to assign
        run: >-
          echo "milestone=$(node
          .github/workflows/wac/utils/runNodeScripts/getMilestoneToAssign.js
          '{"latestWebinyVersion":"${{
          needs.constants.outputs.latest-webiny-version }}","baseBranch":"${{
          github.base_ref }}"}')" >> $GITHUB_OUTPUT
      - uses: zoispag/action-assign-milestone@v1
        if: steps.get-milestone-to-assign.outputs.milestone
        with:
          repo-token: ${{ secrets.GH_TOKEN }}
          milestone: ${{ steps.get-milestone-to-assign.outputs.milestone }}
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  build:
    name: Build
    needs: constants
    runs-on: webiny-build-packages
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.global-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  staticCodeAnalysis:
    needs:
      - constants
    name: Static code analysis
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Check code formatting
        run: yarn prettier:check
        working-directory: ${{ github.base_ref }}
      - name: Check dependencies
        run: yarn adio
        working-directory: ${{ github.base_ref }}
      - name: Check TS configs
        run: yarn check-ts-configs
        working-directory: ${{ github.base_ref }}
      - name: ESLint
        run: yarn eslint
        working-directory: ${{ github.base_ref }}
      - name: Sync Dependencies Verification
        run: yarn verify-dependencies
        working-directory: ${{ github.base_ref }}
      - name: Check Package Node Modules
        run: yarn check-package-dependencies
        working-directory: ${{ github.base_ref }}
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  staticCodeAnalysisVerifyDependencies:
    needs:
      - constants
      - build
    name: Static code analysis (verify dependencies)
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ github.base_ref }}
      - name: Sync Dependencies Verification
        run: yarn verify-dependencies
        working-directory: ${{ github.base_ref }}
      - name: Check Package Node Modules
        run: yarn check-package-dependencies
        working-directory: ${{ github.base_ref }}
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  staticCodeAnalysisTs:
    name: Static code analysis (TypeScript)
    runs-on: webiny-build-packages
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Check types for Cypress tests
        run: yarn cy:ts
        working-directory: ${{ github.base_ref }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  jestTestsNoStorageConstants:
    needs:
      - constants
      - build
    name: Create Jest tests constants
    runs-on: ubuntu-latest
    outputs:
      packages-to-jest-test: ${{ steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List packages to test with Jest
        id: list-packages-to-jest-test
        run: >-
          echo "packages-to-jest-test=$(node
          .github/workflows/wac/utils/runNodeScripts/listPackagesToJestTest.js
          '[[{"id":"78e78cff1f05c20dcaf23b9039fc29ca","name":"admin-ui"},{"id":"f28d23878a30b341289006ebad3f1487","name":"api"},{"id":"005b9021279de1b91c91b8f573c09406","name":"api-aco"},{"id":"3e065cd5c1fa02f0a29245223dea1df4","name":"api-admin-settings"},{"id":"f0686c029337199dbda8e4264f51ef95","name":"api-audit-logs"},{"id":"6d95c745d33b2c54b4c8c7b04cdc5f7a","name":"api-authentication"},{"id":"ff825df08c0cff70541cb301bea27ae9","name":"api-authentication-cognito"},{"id":"354e9e34a77d3cc4edcbf6edbdad300a","name":"api-dynamodb-to-elasticsearch"},{"id":"91ad8b24f5295bdc26a8e312c1e803a1","name":"api-elasticsearch"},{"id":"f315e89b34636af361fdb4a7fad1fa8a","name":"api-elasticsearch-tasks"},{"id":"153510ac50613da8f94e4db0ca39309e","name":"api-file-manager"},{"id":"83d3ea70762212e81d51ff2164d29371","name":"api-file-manager-aco"},{"id":"e63bfcc8184d63e15f3c716a853a3fed","name":"api-file-manager-s3"},{"id":"4ed21465eba52dcb49a3ceb6751f0787","name":"api-headless-cms"},{"id":"eca5223c169c0ab06a281919caaec9d8","name":"api-headless-cms-aco"},{"id":"5dfa92841a744547b8ff0ce34e7d6478","name":"api-headless-cms-bulk-actions"},{"id":"0785a00b450b68c42cee09cb3ff5e38e","name":"api-headless-cms-ddb"},{"id":"9790195a76f1ac03c6d45cfd90762aa7","name":"api-headless-cms-ddb-es"},{"id":"9c80c72d2a4a162d97ceb11d24a729ca","name":"api-headless-cms-es-tasks"},{"id":"c20296afdda4aa7863d2ce7366ea1311","name":"api-headless-cms-import-export"},{"id":"7a76e6c04b0636100fc0874ebc96ae09","name":"api-headless-cms-scheduler"},{"id":"ca894546e11cad9622802ba89424fc0a","name":"api-headless-cms-tasks"},{"id":"4ed819ee7cdb6e3e967e5d58c4afd71e","name":"api-i18n"},{"id":"7adbff19d41afd213499ece40f73ece5","name":"api-log"},{"id":"377e78cf5058ba250171e7f4544994c4","name":"api-mailer"},{"id":"49fb55609efa00f0b22642f2060bc15a","name":"api-record-locking"},{"id":"a53cf4df81544be4dd532e6b3bd56ae3","name":"api-security"},{"id":"cfdb1e39ba10b252579cdcc128fc3305","name":"api-security-cognito"},{"id":"2c7f936ec72dfaa483974b64225f69b3","name":"api-sync-system"},{"id":"cf3083dbf6f31a74fa1360029d65ea5b","name":"api-tenancy"},{"id":"e6a8b21ff0cee541c2e928b450bffe63","name":"api-tenant-manager"},{"id":"f140b8945c781a5c198b801634efe55f","name":"api-wcp"},{"id":"5d0133075bfbff0c288f0d1b4561c2b0","name":"api-websockets"},{"id":"b296aa6092651fcccd1d63db6cfeb4bd","name":"app-aco"},{"id":"fa2b779340923a7dda57477a73d38c72","name":"app-admin"},{"id":"46d871036821ff71b3ecee46bf57c726","name":"app-file-manager"},{"id":"42247dc9a6ae438a540e4000bbfeb5ca","name":"app-headless-cms"},{"id":"d97b083422a088bae17b585cf1040121","name":"app-trash-bin"},{"id":"3423e4665b35a14a87c79a91d5055834","name":"app-website-builder"},{"id":"dd2bf15ba49ae6c100028653be6809ca","name":"data-migration"},{"id":"836dacf5b79391c1ff78a3f35a199699","name":"db-dynamodb"},{"id":"477c738847bdb4b4c97049b197c15667","name":"di-container"},{"id":"44586b08b4c7667bf52cf01bb7b76068","name":"form"},{"id":"80b5115e71519462c4822cc6f1bf2893","name":"handler"},{"id":"a94c42261f91f4fd5d41a2833ca32da8","name":"handler-aws"},{"id":"153057fd491d7eb9311b6f8dd15445ef","name":"handler-graphql"},{"id":"3c3a16556a481d298eebb1478a08d5d3","name":"ioc"},{"id":"231b2de8c7817eb410f4a48e13f9905d","name":"lexical-converter"},{"id":"1de675057ce433c3412cc7bb01a458bc","name":"migrations"},{"id":"73c2450171d05e8316be13e7e912c7d2","name":"plugins"},{"id":"754f831f93f62f9219bb479406015004","name":"pubsub"},{"id":"d6386378f5fd3cd48e64fb6009b8e390","name":"react-composition"},{"id":"600eef36b44328badf1e6b8730aa428c","name":"react-properties"},{"id":"a7820072a705d8759c65fdaaa5472fe3","name":"react-rich-text-lexical-renderer"},{"id":"d8b10d195a6973482b0574e6af94f01f","name":"react-router"},{"id":"946fac38c40d292156dc054fe0b76be6","name":"tasks"},{"id":"7fb8b2377c9e6e0c818db3c7d087f33d","name":"utils"},{"id":"5fc21f82cb75ae8c0d02b9f356b3bbd0","name":"validation"},{"id":"1187a30c603349c02124f55c75aced21","name":"website-builder-sdk"}],
          ${{ needs.constants.outputs.changed-packages }}]')" >> $GITHUB_OUTPUT
      - name: Packages to test with Jest
        id: list-packages
        run: >-
          echo '${{
          steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}'
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  jestTestsundefinedRun:
    needs:
      - constants
      - build
      - jestTestsNoStorageConstants
    name: ${{ matrix.package.cmd }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        package: >-
          ${{
          fromJson(needs.jestTestsNoStorageConstants.outputs.packages-to-jest-test)
          }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
    if: needs.jestTestsNoStorageConstants.outputs.packages-to-jest-test != '[]'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ github.base_ref }}
      - name: Run tests
        run: yarn test ${{ matrix.package.cmd }}
        working-directory: ${{ github.base_ref }}
  jestTestsddbConstants:
    needs:
      - constants
      - build
    name: Create Jest tests constants
    runs-on: ubuntu-latest
    outputs:
      packages-to-jest-test: ${{ steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List packages to test with Jest
        id: list-packages-to-jest-test
        run: >-
          echo "packages-to-jest-test=$(node
          .github/workflows/wac/utils/runNodeScripts/listPackagesToJestTest.js
          '[[{"id":"c773a8d5e254c11bbb82211b7f1da346","name":"admin-ui"},{"id":"5310c50a5287ae8653116d6eb2137402","name":"api"},{"id":"42883d975f9b4459a6c30a051dc499e2","name":"api-aco"},{"id":"29af1a8f1a3b617a8623475f52d3acfc","name":"api-admin-settings"},{"id":"02bf98daf2080640f3f07bf61ad8aee2","name":"api-audit-logs"},{"id":"0ea817047e5f6552d60c382878c8b093","name":"api-authentication"},{"id":"d3bd15c5e496d0292682d4e313f52bc4","name":"api-authentication-cognito"},{"id":"4d54ea3b8339e11c48b3e8568bf8ccf7","name":"api-dynamodb-to-elasticsearch"},{"id":"93f84a96ba31b90f00a355485b2bb763","name":"api-elasticsearch"},{"id":"ed39f29c87cb39cf59668e41091d6caf","name":"api-elasticsearch-tasks"},{"id":"a00b550a4cee29fb84e312d6959cb2db","name":"api-file-manager"},{"id":"f6c581aea414c04a2313d708540e5dd5","name":"api-file-manager-aco"},{"id":"67d299ebebb2a7fc3f50a9e50214f4af","name":"api-file-manager-s3"},{"id":"b56e3adc128d1c154ed2be31ea746f02","name":"api-headless-cms"},{"id":"48d8520d1ba035de06d00f4e6a15b40a","name":"api-headless-cms-aco"},{"id":"1d290dac49f0259288c9e743d27c1a7e","name":"api-headless-cms-bulk-actions"},{"id":"e907aa2022af1e2ddbbe99c00a65cb46","name":"api-headless-cms-ddb"},{"id":"120878f8b7e8c2581005ac153d115c3c","name":"api-headless-cms-ddb-es"},{"id":"46c90238b39dc505684d74b3b48a6529","name":"api-headless-cms-es-tasks"},{"id":"ccf67076abc53cbb4e4867584ad38ee0","name":"api-headless-cms-import-export"},{"id":"b77cfdfe22a2a38117e6d00a2593573b","name":"api-headless-cms-scheduler"},{"id":"02dd009b6ea629abe3dd466f93130649","name":"api-headless-cms-tasks"},{"id":"c3d495abcc5fe229b703646308a9997e","name":"api-i18n"},{"id":"3e55ed03899a3850a9560cd91c7cd662","name":"api-log"},{"id":"04109e60381fc310e4db1fa430984a6e","name":"api-mailer"},{"id":"eff19ba81defc4b839262a439483bb88","name":"api-record-locking"},{"id":"69201f6219db18de87f79b1d4cc1d242","name":"api-security"},{"id":"cf1058427f978c91adf4aab76bb94c54","name":"api-security-cognito"},{"id":"39794df0a0fa91bb162db2186003cf46","name":"api-sync-system"},{"id":"7bcda299459a3cd1aee9546e8314056c","name":"api-tenancy"},{"id":"6d32a4cf5a4ef8a6ebbec78bdfd4dbbc","name":"api-tenant-manager"},{"id":"0bedab6cd1171af6146f027d08f4a305","name":"api-wcp"},{"id":"c16c0495f18e2693120378eec6e9e080","name":"api-websockets"},{"id":"d51e63b14afe38a66d1fb943b005d11a","name":"app-aco"},{"id":"175b62acc105210d3403039690f47902","name":"app-admin"},{"id":"9d094efc70d6e7877d36f5279952a9c5","name":"app-file-manager"},{"id":"f616bbf3efaee678d0cda0bec385e12e","name":"app-headless-cms"},{"id":"3fb848f358f6977a14bf1946009a1362","name":"app-trash-bin"},{"id":"1a6c48c4731642168af82360b1411177","name":"app-website-builder"},{"id":"643018fb06dd91c7c0c439ee4b0e8a31","name":"data-migration"},{"id":"b8bd46f37236cdd97fdf9ecadd75b9a9","name":"db-dynamodb"},{"id":"e65cac9181df7720d7c0e3db4e88db62","name":"di-container"},{"id":"6537ab9dcaf3dc0c6f1526cd14b8377e","name":"form"},{"id":"2f33ee9d3bbc5d8f6f6d8adc9b454c76","name":"handler"},{"id":"aa5f66c186497c813c4ac4bb10fc326d","name":"handler-aws"},{"id":"732d9aab8969492e3ab3ed579d16cd99","name":"handler-graphql"},{"id":"039f6e611052620a31dcba1306075f7d","name":"ioc"},{"id":"6726ffc656ddfa8f2eeeeb20f2ef2e91","name":"lexical-converter"},{"id":"9f8b925fcb131e240525a92d0ea3f563","name":"migrations"},{"id":"b90379696bcbde1d30f2951c016f1b5d","name":"plugins"},{"id":"d405a86d32347b7f1821d81267c24f0c","name":"pubsub"},{"id":"4ba0118f7b93b6b3c4486c2364ed3e41","name":"react-composition"},{"id":"5a54435ab84126846f3643ae2c99b158","name":"react-properties"},{"id":"8a7247a041112167e21869ebc8552c81","name":"react-rich-text-lexical-renderer"},{"id":"5ddf7e42d7178f4a9354517ba672426c","name":"react-router"},{"id":"0c7c92a78bbd3e6d055a8c80b4891746","name":"tasks"},{"id":"ddb234a371e65ba787593d9ced05d0a4","name":"utils"},{"id":"ab284899b93295b18230a3860223928a","name":"validation"},{"id":"eaf9eab1aa75d12fd05816a9036aad62","name":"website-builder-sdk"}],
          ${{ needs.constants.outputs.changed-packages }}]')" >> $GITHUB_OUTPUT
      - name: Packages to test with Jest
        id: list-packages
        run: >-
          echo '${{
          steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}'
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  jestTestsddbRun:
    needs:
      - constants
      - build
      - jestTestsddbConstants
    name: ${{ matrix.package.cmd }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        package: >-
          ${{
          fromJson(needs.jestTestsddbConstants.outputs.packages-to-jest-test) }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
    if: needs.jestTestsddbConstants.outputs.packages-to-jest-test != '[]'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ github.base_ref }}
      - name: Run tests
        run: yarn test ${{ matrix.package.cmd }}
        working-directory: ${{ github.base_ref }}
  jestTestsddb-es_ddbConstants:
    needs:
      - constants
      - build
    name: Create Jest tests constants
    runs-on: ubuntu-latest
    outputs:
      packages-to-jest-test: ${{ steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List packages to test with Jest
        id: list-packages-to-jest-test
        run: >-
          echo "packages-to-jest-test=$(node
          .github/workflows/wac/utils/runNodeScripts/listPackagesToJestTest.js
          '[[{"id":"3eaacda7a29a2907a0c984ed9a3f23d5","name":"admin-ui"},{"id":"e3edbfa8928050d46c665d494098508a","name":"api"},{"id":"9c56719e323386c03486dd6d9d4b25bc","name":"api-aco"},{"id":"cd216184a67bbbf27e01a6b80528f45c","name":"api-admin-settings"},{"id":"def607b814ca266b3051655ec0d15ab2","name":"api-audit-logs"},{"id":"03775680068c1629d90d492033d7481a","name":"api-authentication"},{"id":"82f90dc3a4a7130b5799c60fdaf7f177","name":"api-authentication-cognito"},{"id":"e8d8245b6173523fd98fd3cf1b538134","name":"api-dynamodb-to-elasticsearch"},{"id":"af632641ea12b51b87cd4ed8edbdb9c3","name":"api-elasticsearch"},{"id":"6aca735aaa09d7e80371d749a882eef8","name":"api-elasticsearch-tasks"},{"id":"1baa097c07d412c94832ede4e22909bb","name":"api-file-manager"},{"id":"b66d47773e7c16f54b2db2bf8daae83d","name":"api-file-manager-aco"},{"id":"b3fd4292d78a0542dec844c171dd6cd9","name":"api-file-manager-s3"},{"id":"f6b269d1b485490f0f67c161d62ed783","name":"api-headless-cms"},{"id":"848342eec02c09a845b730b5fe768406","name":"api-headless-cms-aco"},{"id":"0712f4b6174e604530d740416432f146","name":"api-headless-cms-bulk-actions"},{"id":"f578b6a973d38935f45247afbbce8365","name":"api-headless-cms-ddb"},{"id":"abc90864673bf8a7e0334229b8d28714","name":"api-headless-cms-ddb-es"},{"id":"2cfa173b448a8aea92a7e226077a309d","name":"api-headless-cms-es-tasks"},{"id":"1fa2499f7dbbea6891d882e5d29b72d1","name":"api-headless-cms-import-export"},{"id":"5b1c9524cec9f233b492835521faa0a1","name":"api-headless-cms-scheduler"},{"id":"477b6beff586d17fc7fcc4d96ba68608","name":"api-headless-cms-tasks"},{"id":"b3f3c57bec896f422b7532b3c341b2e8","name":"api-i18n"},{"id":"bace9e13a9cedaec08f245ed9178db8d","name":"api-log"},{"id":"4de21b2f9a1262270705ee37259e763d","name":"api-mailer"},{"id":"d8b22960bd0b48873e6ffaf5e7de6abe","name":"api-record-locking"},{"id":"84526fdfdf3162e688bd644918fb4bff","name":"api-security"},{"id":"8e48f0653b8eca076120c2ca5b54cbb0","name":"api-security-cognito"},{"id":"6f2139336a3f2b6d5c626f9c7d21b100","name":"api-sync-system"},{"id":"e38e9c079f6eab0ce9575a1eafa86032","name":"api-tenancy"},{"id":"babd6ec3bfc48e41d2ce1d7ef17a0341","name":"api-tenant-manager"},{"id":"0e352c799651e0b234b992dba8207e4e","name":"api-wcp"},{"id":"c8f939c533badb58f55361afde50e9b3","name":"api-websockets"},{"id":"e799eecee478d8191cf485d32ac748f5","name":"app-aco"},{"id":"e7e5331791d41299a0f7647bfd8dd055","name":"app-admin"},{"id":"035233c6742ad9f4beb6840fe8c7e291","name":"app-file-manager"},{"id":"cf64cf2c12c863f290e5f4846d280694","name":"app-headless-cms"},{"id":"eb157c6d48ef98479169eeffc8ab60d7","name":"app-trash-bin"},{"id":"02f5fbc11e253eff1d673d822dce2346","name":"app-website-builder"},{"id":"a1d7160e33a9af90b123f20a88842873","name":"data-migration"},{"id":"0760ea820b6942c1d4657e8d29be5e11","name":"db-dynamodb"},{"id":"6385cdeed9e92033e6849c9e69bf8057","name":"di-container"},{"id":"917f1e1ff0f3d852464c62c2f6495585","name":"form"},{"id":"ac41ef7ea96621f71214fa325bdaf208","name":"handler"},{"id":"8f4d5e60911651b29525628ed3f0fa5f","name":"handler-aws"},{"id":"e15828ff0c862b1a4198551719562998","name":"handler-graphql"},{"id":"0c9c0356f5161dcf524b354c5d27c5c8","name":"ioc"},{"id":"6ec69ea4066fc5854f30d14a53b4fb31","name":"lexical-converter"},{"id":"c8ad902e4f517c4172647302a2426f18","name":"migrations"},{"id":"ccabd8b2467d6290e393cfb87a671e79","name":"plugins"},{"id":"fa429cc525abec92349230752bad88ec","name":"pubsub"},{"id":"aef39bc0e8c4edb017556bef1c00c769","name":"react-composition"},{"id":"370b3d1f58ad5da2d467ccca8c570712","name":"react-properties"},{"id":"60bf725e58a852555dcac11f3d1f92d1","name":"react-rich-text-lexical-renderer"},{"id":"f667f17e5524110748be20dad3863e85","name":"react-router"},{"id":"9a5c424a4e86fed341a4da704513e9ed","name":"tasks"},{"id":"fd54e8600c68c4b7bd07b6bb2a04437d","name":"utils"},{"id":"2c319cfc63882d5f4ea7996a6f4b33a0","name":"validation"},{"id":"25a4980e9a2052e6e0d8077d407a0964","name":"website-builder-sdk"}],
          ${{ needs.constants.outputs.changed-packages }}]')" >> $GITHUB_OUTPUT
      - name: Packages to test with Jest
        id: list-packages
        run: >-
          echo '${{
          steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}'
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  jestTestsddb-es,ddbRun:
    needs:
      - constants
      - build
      - jestTestsddb-es_ddbConstants
    name: ${{ matrix.package.cmd }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        package: >-
          ${{
          fromJson(needs.jestTestsddb-es_ddbConstants.outputs.packages-to-jest-test)
          }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.ELASTIC_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ matrix.package.id }}
    if: >-
      needs.jestTestsddb-es_ddbConstants.outputs.packages-to-jest-test != '[]'
      && needs.constants.outputs.is-fork-pr != 'true'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ github.base_ref }}
      - name: Run tests
        run: yarn test ${{ matrix.package.cmd }}
        working-directory: ${{ github.base_ref }}
    permissions:
      id-token: write
  jestTestsddb-os_ddbConstants:
    needs:
      - constants
      - build
    name: Create Jest tests constants
    runs-on: ubuntu-latest
    outputs:
      packages-to-jest-test: ${{ steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List packages to test with Jest
        id: list-packages-to-jest-test
        run: >-
          echo "packages-to-jest-test=$(node
          .github/workflows/wac/utils/runNodeScripts/listPackagesToJestTest.js
          '[[{"id":"2b408290a10d64c2384a1e48a6918706","name":"admin-ui"},{"id":"550bfe83ce557216e6b8ec5fd865d85c","name":"api"},{"id":"90c5fb3486842547313d354443e439c7","name":"api-aco"},{"id":"54a813f6b9aaa14a86e6fe2dbbbed08d","name":"api-admin-settings"},{"id":"db6c35250002a5de20166724e10385bc","name":"api-audit-logs"},{"id":"70b52812b0741452823d2930f80a3f26","name":"api-authentication"},{"id":"74d2377bc3da75d14761904a13c3b99a","name":"api-authentication-cognito"},{"id":"daee22445a11e54a0163178e21a0a0af","name":"api-dynamodb-to-elasticsearch"},{"id":"c0be6c6858f09cd4fb3aa4cc222fc75c","name":"api-elasticsearch"},{"id":"baf5ca23a76781df985447db6ec8c062","name":"api-elasticsearch-tasks"},{"id":"ca232304096efc041647bef19b6807dd","name":"api-file-manager"},{"id":"bcc559f995a800535395500c59bee154","name":"api-file-manager-aco"},{"id":"c65ea261667db75ba60f23220d8cad1d","name":"api-file-manager-s3"},{"id":"0ff89a7c05f22bc2f4762315c99ab758","name":"api-headless-cms"},{"id":"a0877e11cb1cc8d33586bdcbb4cca720","name":"api-headless-cms-aco"},{"id":"81c6e1d9cf30b5436c177f90d4d57a0d","name":"api-headless-cms-bulk-actions"},{"id":"b9720e9032da18818ec93762f188ff94","name":"api-headless-cms-ddb"},{"id":"f9f0bedeab89dccfedf2526a7820d293","name":"api-headless-cms-ddb-es"},{"id":"c546c5dcfd007c1ccaccd72736a87922","name":"api-headless-cms-es-tasks"},{"id":"ee3416716102f09f50bf136022af3f85","name":"api-headless-cms-import-export"},{"id":"dc02f0fea67be847dcc3a6bd4bb48aa2","name":"api-headless-cms-scheduler"},{"id":"d42e50aa711b997c8498788888fd9485","name":"api-headless-cms-tasks"},{"id":"9d071db2250a4f54bb7f7c4bdf43edf4","name":"api-i18n"},{"id":"dd62fd4b386cf4aaaaeb7b8fbcef7550","name":"api-log"},{"id":"1a6e31a042c3d18293bc007584a78609","name":"api-mailer"},{"id":"6f4db233a8894dee1b1835f45c1063a6","name":"api-record-locking"},{"id":"daf989c16b842730b45e20ac7b2b668f","name":"api-security"},{"id":"0b3603a24b4eade68edba499c240e17f","name":"api-security-cognito"},{"id":"6da4ba1dd64e2d50f06e256909a73c1a","name":"api-sync-system"},{"id":"910ec47aa2111816de29697e4a5f35d1","name":"api-tenancy"},{"id":"b60b662fa28f3509a5f8e7f86580da79","name":"api-tenant-manager"},{"id":"4742b8fbe050091a3d75d005231b668c","name":"api-wcp"},{"id":"8b7ea4ccb0e0903c894c674e68421a61","name":"api-websockets"},{"id":"c095b8097e23fad8d54e923ca6e5448e","name":"app-aco"},{"id":"42e7d13269dbcfff00f06c1e51740ec0","name":"app-admin"},{"id":"0a950db9d14737b5b8b4923b3d88fab9","name":"app-file-manager"},{"id":"8b161010acaead04c6f3e5d6ecc92078","name":"app-headless-cms"},{"id":"3933ef0ef77e8ef801df56d79e6f3944","name":"app-trash-bin"},{"id":"49956808c529beef275213b3613b3013","name":"app-website-builder"},{"id":"c5f5a9b34fdbd62b58acff6a2bc60a03","name":"data-migration"},{"id":"0677cfba17f8d9513d39cd1449d0d9e2","name":"db-dynamodb"},{"id":"60b158034bca112ab7e9e02312f58a54","name":"di-container"},{"id":"a9eadc70e145b5d19a7d1f9a454363eb","name":"form"},{"id":"c874e6178b87839fcd33eeacea95d9e7","name":"handler"},{"id":"a6b1ded4d576c7abdcba07f33492ffd7","name":"handler-aws"},{"id":"7ac83f8f12364da07ee98de32a532b3a","name":"handler-graphql"},{"id":"1d4ceddbbaae183d0fe622132f9639d2","name":"ioc"},{"id":"30abec4d8d14f0b8fec8a8707c9b8998","name":"lexical-converter"},{"id":"dfc3037cf234ef0c9e201673b1c548bb","name":"migrations"},{"id":"8c53e0df3b24e1ebb6b358467e261bd3","name":"plugins"},{"id":"d869aa9ef9eda1e4717501427f0e70ea","name":"pubsub"},{"id":"087adedd3ea1dcb52766ef882358071a","name":"react-composition"},{"id":"7bfb1fa5b2efe418c18fb259e9aff7a5","name":"react-properties"},{"id":"8c6a88701e65acad938e8e82e51e30d0","name":"react-rich-text-lexical-renderer"},{"id":"59633c644c7523938f34cfc91243b801","name":"react-router"},{"id":"f109bb174fc27b65e31159a7dd75fe67","name":"tasks"},{"id":"6c367016d7207fff66a2fcc23fe91568","name":"utils"},{"id":"6bc847f0d0d32c229e74645166fea83c","name":"validation"},{"id":"f71db398b3491ef4308856a8eae60a74","name":"website-builder-sdk"}],
          ${{ needs.constants.outputs.changed-packages }}]')" >> $GITHUB_OUTPUT
      - name: Packages to test with Jest
        id: list-packages
        run: >-
          echo '${{
          steps.list-packages-to-jest-test.outputs.packages-to-jest-test }}'
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  jestTestsddb-os,ddbRun:
    needs:
      - constants
      - build
      - jestTestsddb-os_ddbConstants
    name: ${{ matrix.package.cmd }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        package: >-
          ${{
          fromJson(needs.jestTestsddb-os_ddbConstants.outputs.packages-to-jest-test)
          }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_OPEN_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.OPEN_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ matrix.package.id }}
    if: >-
      needs.jestTestsddb-os_ddbConstants.outputs.packages-to-jest-test != '[]'
      && needs.constants.outputs.is-fork-pr != 'true'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          path: ${{ github.base_ref }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ github.base_ref }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ github.base_ref }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ github.base_ref }}
      - name: Run tests
        run: yarn test ${{ matrix.package.cmd }}
        working-directory: ${{ github.base_ref }}
    permissions:
      id-token: write
