# This file was automatically generated by github-actions-wac.
# DO NOT MODIFY IT BY HAND. Instead, modify the source *.wac.ts file(s)
# and run "github-actions-wac build" (or "ghawac build") to regenerate this file.
# For more information, run "github-actions-wac --help".
name: Pull Requests Command - Vitest
'on': issue_comment
env:
  NODE_OPTIONS: '--max_old_space_size=4096'
  AWS_REGION: eu-central-1
jobs:
  checkComment:
    name: Check comment for /vitest
    if: ${{ github.event.issue.pull_request }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: vitest
          reaction: 'true'
          reaction-type: eyes
          allow-edits: 'false'
          permission-level: write
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: >-
            Vitest tests have been initiated (for more information, click
            [here](https://github.com/webiny/webiny-js/actions/runs/${{
            github.run_id }})). :sparkles:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  baseBranch:
    needs: checkComment
    name: Get base branch
    outputs:
      base-branch: ${{ steps.base-branch.outputs.base-branch }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: Get base branch
        id: base-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: >-
          echo "base-branch=$(gh pr view ${{ github.event.issue.number }} --json
          baseRefName -q .baseRefName)" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  constants:
    needs: baseBranch
    name: Create constants
    outputs:
      global-cache-key: ${{ steps.global-cache-key.outputs.global-cache-key }}
      run-cache-key: ${{ steps.run-cache-key.outputs.run-cache-key }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Create global cache key
        id: global-cache-key
        run: >-
          echo "global-cache-key=${{ needs.baseBranch.outputs.base-branch }}-${{
          runner.os }}-$(/bin/date -u "+%m%d")-${{ vars.RANDOM_CACHE_KEY_SUFFIX
          }}" >> $GITHUB_OUTPUT
      - name: Create workflow run cache key
        id: run-cache-key
        run: >-
          echo "run-cache-key=${{ github.run_id }}-${{ github.run_attempt }}-${{
          vars.RANDOM_CACHE_KEY_SUFFIX }}" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  build:
    name: Build
    needs:
      - baseBranch
      - constants
    runs-on: webiny-build-packages
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Checkout Pull Request
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
        run: gh pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.global-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  vitest-constants:
    needs:
      - build
    name: Vitest (No storage) - Constants
    outputs:
      vitest-test-commands: ${{ steps.list-vitest-test-commands.outputs.vitest-test-commands }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - id: list-vitest-test-commands
        name: List Vitest Test Commands
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
        run: >-
          echo "vitest-test-commands=$(node
          .github/workflows/wac/utils/runNodeScripts/listVitestTestCommands.js
          '{"storageOps":null}')" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  vitest-run:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: ${{ fromJson('[]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Run tests
        run: yarn test ${{ matrix.testCommand.cmd }}
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
  vitest-ddb-constants:
    needs:
      - build
    name: Vitest (DDB) - Constants
    outputs:
      vitest-test-commands: ${{ steps.list-vitest-test-commands.outputs.vitest-test-commands }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - id: list-vitest-test-commands
        name: List Vitest Test Commands
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
        run: >-
          echo "vitest-test-commands=$(node
          .github/workflows/wac/utils/runNodeScripts/listVitestTestCommands.js
          '{"storageOps":"ddb"}')" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  vitest-ddb-run:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: ${{ fromJson('[]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Run tests
        run: yarn test ${{ matrix.testCommand.cmd }}
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
  vitest-ddbEs-constants:
    needs:
      - build
    name: Vitest (DDB+ES) - Constants
    outputs:
      vitest-test-commands: ${{ steps.list-vitest-test-commands.outputs.vitest-test-commands }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - id: list-vitest-test-commands
        name: List Vitest Test Commands
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
        run: >-
          echo "vitest-test-commands=$(node
          .github/workflows/wac/utils/runNodeScripts/listVitestTestCommands.js
          '{"storageOps":"ddbEs"}')" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  vitest-ddbEs-run:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: ${{ fromJson('[]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.ELASTIC_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ matrix.testCommand.id }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Run tests
        run: yarn test ${{ matrix.testCommand.cmd }}
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
    permissions:
      id-token: write
  vitest-ddbOs-constants:
    needs:
      - build
    name: Vitest (DDB+OS) - Constants
    outputs:
      vitest-test-commands: ${{ steps.list-vitest-test-commands.outputs.vitest-test-commands }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - id: list-vitest-test-commands
        name: List Vitest Test Commands
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
        run: >-
          echo "vitest-test-commands=$(node
          .github/workflows/wac/utils/runNodeScripts/listVitestTestCommands.js
          '{"storageOps":"ddbOs"}')" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  vitest-ddbOs-run:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: ${{ fromJson('[]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_OPEN_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.OPEN_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ matrix.testCommand.id }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: ${{ needs.baseBranch.outputs.base-branch }}/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Build packages
        run: yarn build
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
      - name: Run tests
        run: yarn test ${{ matrix.testCommand.cmd }}
        working-directory: ${{ needs.baseBranch.outputs.base-branch }}
    permissions:
      id-token: write
