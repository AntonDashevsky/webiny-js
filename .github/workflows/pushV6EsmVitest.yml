# This file was automatically generated by github-actions-wac.
# DO NOT MODIFY IT BY HAND. Instead, modify the source *.wac.ts file(s)
# and run "github-actions-wac build" (or "ghawac build") to regenerate this file.
# For more information, run "github-actions-wac --help".
name: Feat/v6-esm-vitest Branch - Push
'on':
  push:
    branches:
      - feat/v6-esm-vitest
jobs:
  constants:
    name: Create constants
    outputs:
      global-cache-key: ${{ steps.global-cache-key.outputs.global-cache-key }}
      run-cache-key: ${{ steps.run-cache-key.outputs.run-cache-key }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: Create global cache key
        id: global-cache-key
        run: >-
          echo "global-cache-key=feat/v6-esm-vitest-${{ runner.os }}-$(/bin/date
          -u "+%m%d")-${{ vars.RANDOM_CACHE_KEY_SUFFIX }}" >> $GITHUB_OUTPUT
      - name: Create workflow run cache key
        id: run-cache-key
        run: >-
          echo "run-cache-key=${{ github.run_id }}-${{ github.run_attempt }}-${{
          vars.RANDOM_CACHE_KEY_SUFFIX }}" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  build:
    name: Build
    needs: constants
    runs-on: webiny-build-packages
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.global-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  codeAnalysis:
    name: Static code analysis
    needs:
      - constants
      - build
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Check code formatting
        run: yarn prettier:check
        working-directory: feat/v6-esm-vitest
      - name: Check dependencies
        run: yarn adio
        working-directory: feat/v6-esm-vitest
      - name: Check TS configs
        run: yarn check-ts-configs
        working-directory: feat/v6-esm-vitest
      - name: ESLint
        run: yarn eslint
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  staticCodeAnalysisVerifyDependencies:
    needs:
      - constants
      - build
    name: Static code analysis (verify dependencies)
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Sync Dependencies Verification
        run: yarn verify-dependencies
        working-directory: feat/v6-esm-vitest
      - name: Check Package Node Modules
        run: yarn check-package-dependencies
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  staticCodeAnalysisTs:
    name: Static code analysis (TypeScript)
    runs-on: webiny-build-packages
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Check types for Cypress tests
        run: yarn cy:ts
        working-directory: feat/v6-esm-vitest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  jestTestsNoStorage:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: >-
          ${{
          fromJson('[{"id":"2d5b7da31e06da1bc5a7e70f0970af71","title":"api-headless-cms-ddb","cmd":"yarn
          test
          packages/api-headless-cms-ddb"},{"id":"79d4d193e401dff5b9dc1928f51dc010","title":"api-headless-cms-scheduler","cmd":"yarn
          test
          packages/api-headless-cms-scheduler"},{"id":"b03d908a0cdc635dfeedec76391bd828","title":"website-builder-sdk","cmd":"yarn
          test packages/website-builder-sdk"}]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Run tests
        run: ${{ matrix.testCommand.cmd }}
        working-directory: feat/v6-esm-vitest
  jestTestsDdb:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: >-
          ${{
          fromJson('[{"id":"2731e7bbbc775b8a63ceb5730c213bb5","title":"api-aco","cmd":"yarn
          test
          packages/api-aco"},{"id":"e64071ee36085e2f5d35c37f6d64fd76","title":"api-file-manager","cmd":"yarn
          test
          packages/api-file-manager"},{"id":"1b0a810a4c0d6607a4565c44344fc12c","title":"api-file-manager-aco","cmd":"yarn
          test
          packages/api-file-manager-aco"},{"id":"21af2b0228175c07ff0c1c8072999d71","title":"api-headless-cms
          (1/3)","cmd":"yarn test packages/api-headless-cms
          --shard=1/3"},{"id":"dc5ff1e2d36cda492f66b67038fcfc4d","title":"api-headless-cms
          (2/3)","cmd":"yarn test packages/api-headless-cms
          --shard=2/3"},{"id":"be50144aeeba52975f0e01dcb9b8d2dc","title":"api-headless-cms
          (3/3)","cmd":"yarn test packages/api-headless-cms
          --shard=3/3"},{"id":"50b1b1fc31837b01be1749acb298eddc","title":"api-headless-cms-aco","cmd":"yarn
          test
          packages/api-headless-cms-aco"},{"id":"3f3d2ee1e176537baa8269f420c4f94b","title":"api-headless-cms-bulk-actions","cmd":"yarn
          test
          packages/api-headless-cms-bulk-actions"},{"id":"53a49c987dc77f4bb102d3564023edd2","title":"api-headless-cms-import-export","cmd":"yarn
          test
          packages/api-headless-cms-import-export"},{"id":"47b5a892544fdac975e56173ae103827","title":"api-i18n","cmd":"yarn
          test
          packages/api-i18n"},{"id":"4ae574783a363549aea11632799fbe2f","title":"api-security","cmd":"yarn
          test
          packages/api-security"},{"id":"ffce1ed9abbf3b6d8d487c30f0fe454e","title":"api-security-cognito","cmd":"yarn
          test
          packages/api-security-cognito"},{"id":"f58adae2f6ee9b0d67ef8b92fd1e37a0","title":"api-tenant-manager","cmd":"yarn
          test
          packages/api-tenant-manager"},{"id":"94bb282c6f3c5861b194d85ea0db9bb6","title":"tasks","cmd":"yarn
          test packages/tasks"}]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      WEBINY_STORAGE: ddb
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Run tests
        run: ${{ matrix.testCommand.cmd }}
        working-directory: feat/v6-esm-vitest
  jestTestsDdbEs:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: >-
          ${{
          fromJson('[{"id":"2731e7bbbc775b8a63ceb5730c213bb5","title":"api-aco","cmd":"yarn
          test
          packages/api-aco"},{"id":"d25c2107fd559ba49e5f688c181c4ae1","title":"api-elasticsearch-tasks","cmd":"yarn
          test
          packages/api-elasticsearch-tasks"},{"id":"e64071ee36085e2f5d35c37f6d64fd76","title":"api-file-manager","cmd":"yarn
          test
          packages/api-file-manager"},{"id":"1b0a810a4c0d6607a4565c44344fc12c","title":"api-file-manager-aco","cmd":"yarn
          test
          packages/api-file-manager-aco"},{"id":"21af2b0228175c07ff0c1c8072999d71","title":"api-headless-cms
          (1/3)","cmd":"yarn test packages/api-headless-cms
          --shard=1/3"},{"id":"dc5ff1e2d36cda492f66b67038fcfc4d","title":"api-headless-cms
          (2/3)","cmd":"yarn test packages/api-headless-cms
          --shard=2/3"},{"id":"be50144aeeba52975f0e01dcb9b8d2dc","title":"api-headless-cms
          (3/3)","cmd":"yarn test packages/api-headless-cms
          --shard=3/3"},{"id":"50b1b1fc31837b01be1749acb298eddc","title":"api-headless-cms-aco","cmd":"yarn
          test
          packages/api-headless-cms-aco"},{"id":"3f3d2ee1e176537baa8269f420c4f94b","title":"api-headless-cms-bulk-actions","cmd":"yarn
          test
          packages/api-headless-cms-bulk-actions"},{"id":"2b4aad88245172cf860b06a2a48a3db3","title":"api-headless-cms-ddb-es","cmd":"yarn
          test
          packages/api-headless-cms-ddb-es"},{"id":"554866642a88e27a9de065ef23bbe2fd","title":"api-headless-cms-es-tasks","cmd":"yarn
          test
          packages/api-headless-cms-es-tasks"},{"id":"53a49c987dc77f4bb102d3564023edd2","title":"api-headless-cms-import-export","cmd":"yarn
          test
          packages/api-headless-cms-import-export"},{"id":"94bb282c6f3c5861b194d85ea0db9bb6","title":"tasks","cmd":"yarn
          test packages/tasks"}]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      WEBINY_STORAGE: ddb-es,ddb
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.ELASTIC_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ matrix.package.id }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Run tests
        run: ${{ matrix.testCommand.cmd }}
        working-directory: feat/v6-esm-vitest
    permissions:
      id-token: write
  jestTestsDdbOs:
    needs:
      - constants
      - build
    name: ${{ matrix.testCommand.title }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        testCommand: >-
          ${{
          fromJson('[{"id":"2731e7bbbc775b8a63ceb5730c213bb5","title":"api-aco","cmd":"yarn
          test
          packages/api-aco"},{"id":"d25c2107fd559ba49e5f688c181c4ae1","title":"api-elasticsearch-tasks","cmd":"yarn
          test
          packages/api-elasticsearch-tasks"},{"id":"e64071ee36085e2f5d35c37f6d64fd76","title":"api-file-manager","cmd":"yarn
          test
          packages/api-file-manager"},{"id":"1b0a810a4c0d6607a4565c44344fc12c","title":"api-file-manager-aco","cmd":"yarn
          test
          packages/api-file-manager-aco"},{"id":"21af2b0228175c07ff0c1c8072999d71","title":"api-headless-cms
          (1/3)","cmd":"yarn test packages/api-headless-cms
          --shard=1/3"},{"id":"dc5ff1e2d36cda492f66b67038fcfc4d","title":"api-headless-cms
          (2/3)","cmd":"yarn test packages/api-headless-cms
          --shard=2/3"},{"id":"be50144aeeba52975f0e01dcb9b8d2dc","title":"api-headless-cms
          (3/3)","cmd":"yarn test packages/api-headless-cms
          --shard=3/3"},{"id":"50b1b1fc31837b01be1749acb298eddc","title":"api-headless-cms-aco","cmd":"yarn
          test
          packages/api-headless-cms-aco"},{"id":"3f3d2ee1e176537baa8269f420c4f94b","title":"api-headless-cms-bulk-actions","cmd":"yarn
          test
          packages/api-headless-cms-bulk-actions"},{"id":"2b4aad88245172cf860b06a2a48a3db3","title":"api-headless-cms-ddb-es","cmd":"yarn
          test
          packages/api-headless-cms-ddb-es"},{"id":"554866642a88e27a9de065ef23bbe2fd","title":"api-headless-cms-es-tasks","cmd":"yarn
          test
          packages/api-headless-cms-es-tasks"},{"id":"53a49c987dc77f4bb102d3564023edd2","title":"api-headless-cms-import-export","cmd":"yarn
          test
          packages/api-headless-cms-import-export"},{"id":"94bb282c6f3c5861b194d85ea0db9bb6","title":"tasks","cmd":"yarn
          test packages/tasks"}]') }}
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      AWS_REGION: eu-central-1
      WEBINY_STORAGE: ddb-os,ddb
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_OPEN_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.OPEN_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ matrix.package.id }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Run tests
        run: ${{ matrix.testCommand.cmd }}
        working-directory: feat/v6-esm-vitest
    permissions:
      id-token: write
  e2eTests-ddb-constants:
    name: Constants - DDB
    needs:
      - build
    outputs:
      cypress-folders: ${{ steps.list-cypress-folders.outputs.cypress-folders }}
      pulumi-backend-url: ${{ steps.pulumi-backend-url.outputs.pulumi-backend-url }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List Cypress tests folders
        id: list-cypress-folders
        run: >-
          echo "cypress-folders=$(node scripts/listCypressTestsFolders.js)" >>
          $GITHUB_OUTPUT
      - name: Get Pulumi backend URL
        id: get-pulumi-backend-url
        run: >-
          echo "pulumi-backend-url=${{ secrets.WEBINY_PULUMI_BACKEND }}${{
          github.run_id }}_ddb" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  e2eTests-ddb-setup:
    needs:
      - constants
      - build
      - e2eTests-ddb-constants
    name: E2E (DDB) - Project setup
    outputs:
      cypress-config: ${{ steps.save-cypress-config.outputs.cypress-config }}
    environment: next
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      WEBINY_PULUMI_BACKEND: ${{ needs.e2eTests-ddb-constants.outputs.pulumi-backend-url }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Start Verdaccio local server
        working-directory: feat/v6-esm-vitest
        run: >-
          yarn add pm2 verdaccio && npx pm2 start verdaccio -- -c
          .verdaccio.yaml
      - name: Configure NPM to use local registry
        run: npm config set registry http://localhost:4873
      - name: Set git email
        run: git config --global user.email "webiny-bot@webiny.com"
      - name: Set git username
        run: git config --global user.name "webiny-bot"
      - name: Create ".npmrc" file in the project root, with a dummy auth token
        run: echo '//localhost:4873/:_authToken="dummy-auth-token"' > .npmrc
        working-directory: feat/v6-esm-vitest
      - name: Version and publish to Verdaccio
        run: yarn release --type=verdaccio
        working-directory: feat/v6-esm-vitest
      - name: Create verdaccio-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-files-ddb
          retention-days: 1
          include-hidden-files: true
          path: |-
            feat/v6-esm-vitest/.verdaccio/
            feat/v6-esm-vitest/.verdaccio.yaml
      - name: Disable Webiny telemetry
        run: >
          mkdir ~/.webiny && echo '{ "id": "ci", "telemetry": false }' >
          ~/.webiny/config
      - name: Create a new Webiny project
        run: >
          npx create-webiny-project@local-npm new-webiny-project --tag local-npm
          --no-interactive --assign-to-yarnrc
          '{"npmRegistryServer":"http://localhost:4873","unsafeHttpWhitelist":["localhost"]}'
          --template-options
          '{"region":"eu-central-1","storageOperations":"ddb"}'
      - name: Print CLI version
        working-directory: new-webiny-project
        run: yarn webiny --version
      - name: Create project-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-files-ddb
          retention-days: 1
          include-hidden-files: true
          path: |-
            new-webiny-project/
            !new-webiny-project/node_modules/**/*
            !new-webiny-project/**/node_modules/**/*
            !new-webiny-project/.yarn/cache/**/*
      - name: Deploy Core
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/core --env dev
      - name: Deploy API
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/api --env dev
      - name: Deploy Admin Area
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/admin --env dev
      - name: Deployment Summary
        run: >-
          node
          .github/workflows/wac/utils/runNodeScripts/printDeploymentSummary.js
          '../new-webiny-project' >> $GITHUB_STEP_SUMMARY
        working-directory: feat/v6-esm-vitest
      - name: Create Cypress config
        run: yarn setup-cypress --projectFolder ../new-webiny-project
        working-directory: feat/v6-esm-vitest
      - name: Save Cypress config
        id: save-cypress-config
        run: >-
          echo "cypress-config=$(cat cypress-tests/cypress.config.ts | tr -d
          '\t\n\r')" >> $GITHUB_OUTPUT
        working-directory: feat/v6-esm-vitest
      - name: Cypress - run installation wizard test
        run: >-
          yarn cy:run --browser chrome --spec
          "cypress/e2e/adminInstallation/**/*.cy.js"
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
    permissions:
      id-token: write
  e2eTests-ddb-cypress:
    name: >-
      ${{ matrix.cypress-folder }} (ddb, ${{ matrix.os }}, Node v${{ matrix.node
      }})
    needs:
      - constants
      - e2eTests-ddb-constants
      - e2eTests-ddb-setup
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        cypress-folder: ${{ fromJson(needs.e2eTests-ddb-constants.outputs.cypress-folders) }}
    environment: next
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      WEBINY_PULUMI_BACKEND: ${{ needs.e2eTests-ddb-constants.outputs.pulumi-backend-url }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Set up Cypress config
        run: >-
          echo '${{ needs.e2eTests-ddb-setup.outputs.cypress-config }}' >
          cypress-tests/cypress.config.ts
        working-directory: feat/v6-esm-vitest
      - name: Cypress - run "${{ matrix.cypress-folder }}" tests
        timeout-minutes: 40
        run: yarn cy:run --browser chrome --spec "${{ matrix.cypress-folder }}"
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
  e2eTests-ddb-es_ddb-constants:
    name: Constants - DDB-ES,DDB
    needs:
      - build
    outputs:
      cypress-folders: ${{ steps.list-cypress-folders.outputs.cypress-folders }}
      pulumi-backend-url: ${{ steps.pulumi-backend-url.outputs.pulumi-backend-url }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List Cypress tests folders
        id: list-cypress-folders
        run: >-
          echo "cypress-folders=$(node scripts/listCypressTestsFolders.js)" >>
          $GITHUB_OUTPUT
      - name: Get Pulumi backend URL
        id: get-pulumi-backend-url
        run: >-
          echo "pulumi-backend-url=${{ secrets.WEBINY_PULUMI_BACKEND }}${{
          github.run_id }}_ddb-es_ddb" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  e2eTests-ddb-es_ddb-setup:
    needs:
      - constants
      - build
      - e2eTests-ddb-es_ddb-constants
    name: E2E (DDB-ES,DDB) - Project setup
    outputs:
      cypress-config: ${{ steps.save-cypress-config.outputs.cypress-config }}
    environment: next
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      WEBINY_PULUMI_BACKEND: ${{ needs.e2eTests-ddb-es_ddb-constants.outputs.pulumi-backend-url }}
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.ELASTIC_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ github.run_id }}_
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Start Verdaccio local server
        working-directory: feat/v6-esm-vitest
        run: >-
          yarn add pm2 verdaccio && npx pm2 start verdaccio -- -c
          .verdaccio.yaml
      - name: Configure NPM to use local registry
        run: npm config set registry http://localhost:4873
      - name: Set git email
        run: git config --global user.email "webiny-bot@webiny.com"
      - name: Set git username
        run: git config --global user.name "webiny-bot"
      - name: Create ".npmrc" file in the project root, with a dummy auth token
        run: echo '//localhost:4873/:_authToken="dummy-auth-token"' > .npmrc
        working-directory: feat/v6-esm-vitest
      - name: Version and publish to Verdaccio
        run: yarn release --type=verdaccio
        working-directory: feat/v6-esm-vitest
      - name: Create verdaccio-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-files-ddb-es_ddb
          retention-days: 1
          include-hidden-files: true
          path: |-
            feat/v6-esm-vitest/.verdaccio/
            feat/v6-esm-vitest/.verdaccio.yaml
      - name: Disable Webiny telemetry
        run: >
          mkdir ~/.webiny && echo '{ "id": "ci", "telemetry": false }' >
          ~/.webiny/config
      - name: Create a new Webiny project
        run: >
          npx create-webiny-project@local-npm new-webiny-project --tag local-npm
          --no-interactive --assign-to-yarnrc
          '{"npmRegistryServer":"http://localhost:4873","unsafeHttpWhitelist":["localhost"]}'
          --template-options
          '{"region":"eu-central-1","storageOperations":"ddb-es,ddb"}'
      - name: Print CLI version
        working-directory: new-webiny-project
        run: yarn webiny --version
      - name: Create project-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-files-ddb-es_ddb
          retention-days: 1
          include-hidden-files: true
          path: |-
            new-webiny-project/
            !new-webiny-project/node_modules/**/*
            !new-webiny-project/**/node_modules/**/*
            !new-webiny-project/.yarn/cache/**/*
      - name: Deploy Core
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/core --env dev
      - name: Deploy API
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/api --env dev
      - name: Deploy Admin Area
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/admin --env dev
      - name: Deployment Summary
        run: >-
          node
          .github/workflows/wac/utils/runNodeScripts/printDeploymentSummary.js
          '../new-webiny-project' >> $GITHUB_STEP_SUMMARY
        working-directory: feat/v6-esm-vitest
      - name: Create Cypress config
        run: yarn setup-cypress --projectFolder ../new-webiny-project
        working-directory: feat/v6-esm-vitest
      - name: Save Cypress config
        id: save-cypress-config
        run: >-
          echo "cypress-config=$(cat cypress-tests/cypress.config.ts | tr -d
          '\t\n\r')" >> $GITHUB_OUTPUT
        working-directory: feat/v6-esm-vitest
      - name: Cypress - run installation wizard test
        run: >-
          yarn cy:run --browser chrome --spec
          "cypress/e2e/adminInstallation/**/*.cy.js"
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
    permissions:
      id-token: write
  e2eTests-ddb-es_ddb-cypress:
    name: >-
      ${{ matrix.cypress-folder }} (ddb-es,ddb, ${{ matrix.os }}, Node v${{
      matrix.node }})
    needs:
      - constants
      - e2eTests-ddb-es_ddb-constants
      - e2eTests-ddb-es_ddb-setup
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        cypress-folder: >-
          ${{
          fromJson(needs.e2eTests-ddb-es_ddb-constants.outputs.cypress-folders)
          }}
    environment: next
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      WEBINY_PULUMI_BACKEND: ${{ needs.e2eTests-ddb-es_ddb-constants.outputs.pulumi-backend-url }}
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.ELASTIC_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ github.run_id }}_
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Set up Cypress config
        run: >-
          echo '${{ needs.e2eTests-ddb-es_ddb-setup.outputs.cypress-config }}' >
          cypress-tests/cypress.config.ts
        working-directory: feat/v6-esm-vitest
      - name: Cypress - run "${{ matrix.cypress-folder }}" tests
        timeout-minutes: 40
        run: yarn cy:run --browser chrome --spec "${{ matrix.cypress-folder }}"
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
  e2eTests-ddb-os_ddb-constants:
    name: Constants - DDB-OS,DDB
    needs:
      - build
    outputs:
      cypress-folders: ${{ steps.list-cypress-folders.outputs.cypress-folders }}
      pulumi-backend-url: ${{ steps.pulumi-backend-url.outputs.pulumi-backend-url }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
      - name: List Cypress tests folders
        id: list-cypress-folders
        run: >-
          echo "cypress-folders=$(node scripts/listCypressTestsFolders.js)" >>
          $GITHUB_OUTPUT
      - name: Get Pulumi backend URL
        id: get-pulumi-backend-url
        run: >-
          echo "pulumi-backend-url=${{ secrets.WEBINY_PULUMI_BACKEND }}${{
          github.run_id }}_ddb-os_ddb" >> $GITHUB_OUTPUT
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  e2eTests-ddb-os_ddb-setup:
    needs:
      - constants
      - build
      - e2eTests-ddb-os_ddb-constants
    name: E2E (DDB-OS,DDB) - Project setup
    outputs:
      cypress-config: ${{ steps.save-cypress-config.outputs.cypress-config }}
    environment: next
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      WEBINY_PULUMI_BACKEND: ${{ needs.e2eTests-ddb-os_ddb-constants.outputs.pulumi-backend-url }}
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_OPEN_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.OPEN_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ github.run_id }}_
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::726952677045:role/GitHubActionsWebinyJs
          aws-region: eu-central-1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Start Verdaccio local server
        working-directory: feat/v6-esm-vitest
        run: >-
          yarn add pm2 verdaccio && npx pm2 start verdaccio -- -c
          .verdaccio.yaml
      - name: Configure NPM to use local registry
        run: npm config set registry http://localhost:4873
      - name: Set git email
        run: git config --global user.email "webiny-bot@webiny.com"
      - name: Set git username
        run: git config --global user.name "webiny-bot"
      - name: Create ".npmrc" file in the project root, with a dummy auth token
        run: echo '//localhost:4873/:_authToken="dummy-auth-token"' > .npmrc
        working-directory: feat/v6-esm-vitest
      - name: Version and publish to Verdaccio
        run: yarn release --type=verdaccio
        working-directory: feat/v6-esm-vitest
      - name: Create verdaccio-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-files-ddb-os_ddb
          retention-days: 1
          include-hidden-files: true
          path: |-
            feat/v6-esm-vitest/.verdaccio/
            feat/v6-esm-vitest/.verdaccio.yaml
      - name: Disable Webiny telemetry
        run: >
          mkdir ~/.webiny && echo '{ "id": "ci", "telemetry": false }' >
          ~/.webiny/config
      - name: Create a new Webiny project
        run: >
          npx create-webiny-project@local-npm new-webiny-project --tag local-npm
          --no-interactive --assign-to-yarnrc
          '{"npmRegistryServer":"http://localhost:4873","unsafeHttpWhitelist":["localhost"]}'
          --template-options
          '{"region":"eu-central-1","storageOperations":"ddb-os,ddb"}'
      - name: Print CLI version
        working-directory: new-webiny-project
        run: yarn webiny --version
      - name: Create project-files artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-files-ddb-os_ddb
          retention-days: 1
          include-hidden-files: true
          path: |-
            new-webiny-project/
            !new-webiny-project/node_modules/**/*
            !new-webiny-project/**/node_modules/**/*
            !new-webiny-project/.yarn/cache/**/*
      - name: Deploy Core
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/core --env dev
      - name: Deploy API
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/api --env dev
      - name: Deploy Admin Area
        working-directory: new-webiny-project
        run: yarn webiny deploy apps/admin --env dev
      - name: Deployment Summary
        run: >-
          node
          .github/workflows/wac/utils/runNodeScripts/printDeploymentSummary.js
          '../new-webiny-project' >> $GITHUB_STEP_SUMMARY
        working-directory: feat/v6-esm-vitest
      - name: Create Cypress config
        run: yarn setup-cypress --projectFolder ../new-webiny-project
        working-directory: feat/v6-esm-vitest
      - name: Save Cypress config
        id: save-cypress-config
        run: >-
          echo "cypress-config=$(cat cypress-tests/cypress.config.ts | tr -d
          '\t\n\r')" >> $GITHUB_OUTPUT
        working-directory: feat/v6-esm-vitest
      - name: Cypress - run installation wizard test
        run: >-
          yarn cy:run --browser chrome --spec
          "cypress/e2e/adminInstallation/**/*.cy.js"
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
    permissions:
      id-token: write
  e2eTests-ddb-os_ddb-cypress:
    name: >-
      ${{ matrix.cypress-folder }} (ddb-os,ddb, ${{ matrix.os }}, Node v${{
      matrix.node }})
    needs:
      - constants
      - e2eTests-ddb-os_ddb-constants
      - e2eTests-ddb-os_ddb-setup
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 22
        cypress-folder: >-
          ${{
          fromJson(needs.e2eTests-ddb-os_ddb-constants.outputs.cypress-folders)
          }}
    environment: next
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      YARN_ENABLE_IMMUTABLE_INSTALLS: 'false'
      CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      WEBINY_PULUMI_BACKEND: ${{ needs.e2eTests-ddb-os_ddb-constants.outputs.pulumi-backend-url }}
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_OPEN_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_ENDPOINT: ${{ secrets.OPEN_SEARCH_ENDPOINT }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ github.run_id }}_
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/checkout@v4
        with:
          path: feat/v6-esm-vitest
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        with:
          path: feat/v6-esm-vitest/.webiny/cached-packages
          key: ${{ needs.constants.outputs.run-cache-key }}
      - name: Install dependencies
        run: yarn --immutable
        working-directory: feat/v6-esm-vitest
      - name: Build packages
        run: yarn build
        working-directory: feat/v6-esm-vitest
      - name: Set up Cypress config
        run: >-
          echo '${{ needs.e2eTests-ddb-os_ddb-setup.outputs.cypress-config }}' >
          cypress-tests/cypress.config.ts
        working-directory: feat/v6-esm-vitest
      - name: Cypress - run "${{ matrix.cypress-folder }}" tests
        timeout-minutes: 40
        run: yarn cy:run --browser chrome --spec "${{ matrix.cypress-folder }}"
        working-directory: feat/v6-esm-vitest
    runs-on: ubuntu-latest
